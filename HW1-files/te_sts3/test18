.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1062476065, -942631651, 788126561, 1082770971
__Garbage_273355485: .byte 128
__ExpectedArraySize: .int 4
__Garbage_100928728: .byte 235, 211, 137, 27, 120, 34
__Nodes:
.quad 0
.int -1062476065
.quad __Nodes + 40
.quad __Nodes + 0
.int 788126561
.quad 0
.quad 0
.int -942631651
.quad 0
.quad __Nodes + 20
.int 1082770971
.quad 0
__Garbage_36145195: .byte 196, 112, 193
root:
.quad __Nodes + 60
__Garbage_782657600: .byte 62, 254, 233
node:
.quad 155220064
.int 1082770971
.quad 1202917104
