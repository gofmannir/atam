.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1203266106, 983952779, 1844484381
__Garbage_379033750: .byte 38, 69, 204, 170, 97, 101, 48
__ExpectedArraySize: .int 3
__Garbage_534026922: .byte 119, 58, 15, 48
__Nodes:
.quad 0
.int 983952779
.quad 0
.quad 0
.int -1203266106
.quad __Nodes + 40
.quad __Nodes + 0
.int 1844484381
.quad 0
__Garbage_66519026: .byte 202, 72, 60, 66, 191, 97, 243
root:
.quad __Nodes + 20

node:
.quad -36025235
.int -1203266106
.quad -1994685043
