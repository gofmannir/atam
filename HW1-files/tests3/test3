.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1259065114, 411864201
__Garbage_942184527: .byte 193, 60, 88, 210, 173, 162, 130, 137, 67, 120
__ExpectedArraySize: .int 2
__Garbage_936805133: .byte 140, 203
__Nodes:
.quad 0
.int -1259065114
.quad __Nodes + 20
.quad 0
.int 411864201
.quad 0
__Garbage_201919098: .byte 222
root:
.quad __Nodes + 0
__Garbage_758967206: .byte 236, 247, 196, 136, 134, 37, 44
node:
.quad 782317312
.int 411864201
.quad 1409411076
