.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1278772037, -524071757
__Garbage_588811414: .byte 129, 105, 132, 247
__ExpectedArraySize: .int 2
__Garbage_436675646: .byte 147, 160, 187, 75, 199, 240, 240, 153, 148, 168
__Nodes:
.quad 0
.int -524071757
.quad 0
__Garbage_827824290: .byte 194, 205, 166, 176, 75, 120, 96, 51, 12
root:
.quad __Nodes + 0
__Garbage_535396289: .byte 39, 179, 201
node:
.quad 1324408672
.int -1278772037
.quad 699147100
