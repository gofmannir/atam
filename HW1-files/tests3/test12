.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1325441877, 974494319, 1981776856
__Garbage_107554564: .byte 227, 29, 149, 74, 59, 63, 37, 85, 251
__ExpectedArraySize: .int 3

__Nodes:
.quad 0
.int 1981776856
.quad 0
.quad 0
.int 974494319
.quad __Nodes + 0
__Garbage_460179557: .byte 233, 143, 7, 53, 143, 172, 134, 21
root:
.quad __Nodes + 20
__Garbage_116146554: .byte 243, 100, 219, 79, 62
node:
.quad -209278651
.int -1325441877
.quad 1307315514
