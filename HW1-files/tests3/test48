.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -618097559, 429489731, 554435790, 700234863, 1423065500
__Garbage_828097711: .byte 46, 160, 100
__ExpectedArraySize: .int 5
__Garbage_572714677: .byte 39, 62, 12
__Nodes:
.quad __Nodes + 40
.int 1423065500
.quad 0
.quad 0
.int 429489731
.quad __Nodes + 0
.quad __Nodes + 80
.int 700234863
.quad 0
.quad 0
.int -618097559
.quad __Nodes + 20
.quad 0
.int 554435790
.quad 0
__Garbage_865885888: .byte 246, 11, 207
root:
.quad __Nodes + 60
__Garbage_197925579: .byte 217, 218, 217, 162, 219
node:
.quad -431687122
.int -618097559
.quad -881621102
