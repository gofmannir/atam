.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1947736188, -1320429683, 1868053761
__Garbage_372420508: .byte 66, 9, 110, 254, 202, 126, 207
__ExpectedArraySize: .int 3
__Garbage_429764059: .byte 235, 92, 155
__Nodes:
.quad 0
.int -1947736188
.quad __Nodes + 20
.quad 0
.int -1320429683
.quad 0
__Garbage_131398119: .byte 193, 49, 204, 165, 205, 241, 131
root:
.quad __Nodes + 0
__Garbage_123969990: .byte 116, 219
node:
.quad -186422813
.int 1868053761
.quad -769268782
