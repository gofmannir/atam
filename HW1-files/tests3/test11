.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -272445744, 594780334, 811004078, 1506394979, 1642132084, 1883712169
__Garbage_946285321: .byte 50, 141, 61, 109, 168, 91
__ExpectedArraySize: .int 6
__Garbage_592422434: .byte 33, 248, 22, 17, 212, 248, 242, 130, 146
__Nodes:
.quad 0
.int 1883712169
.quad 0
.quad 0
.int -272445744
.quad 0
.quad __Nodes + 20
.int 594780334
.quad __Nodes + 80
.quad 0
.int 811004078
.quad 0
.quad __Nodes + 60
.int 1506394979
.quad __Nodes + 0
__Garbage_18764445: .byte 222, 105, 29, 100, 97, 153
root:
.quad __Nodes + 40
__Garbage_762051427: .byte 67, 218, 32, 14, 47
node:
.quad 1766645396
.int 1642132084
.quad -190441622
