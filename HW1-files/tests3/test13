.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1668760522, -1603575981, -741255781, -383362298, 887590095, 1406720532
__Garbage_784848472: .byte 41, 141, 134, 223, 9
__ExpectedArraySize: .int 6
__Garbage_3247812: .byte 238, 17, 180, 71, 153, 113, 47, 87, 147, 137
__Nodes:
.quad 0
.int -1668760522
.quad 0
.quad 0
.int 887590095
.quad 0
.quad __Nodes + 0
.int -741255781
.quad 0
.quad __Nodes + 20
.int 1406720532
.quad 0
.quad __Nodes + 40
.int -383362298
.quad __Nodes + 60
__Garbage_333199814: .byte 137, 147, 219, 63, 129, 2, 62, 108, 19, 62
root:
.quad __Nodes + 80
__Garbage_819039191: .byte 123, 116, 70, 209, 19, 56, 112, 238, 237
node:
.quad -282202777
.int -1603575981
.quad 126620282
