.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int 250609357, 927429049, 1208258641
__Garbage_254094969: .byte 14, 182, 35, 131, 101, 128, 178, 174
__ExpectedArraySize: .int 3
__Garbage_607688089: .byte 43, 197, 40, 88, 16, 30, 106, 203
__Nodes:
.quad 0
.int 250609357
.quad __Nodes + 20
.quad 0
.int 927429049
.quad 0
__Garbage_193492560: .byte 195, 23
root:
.quad __Nodes + 0
__Garbage_395237716: .byte 176, 150, 17, 127, 247, 147, 200, 168, 60, 63
node:
.quad -1719945334
.int 1208258641
.quad -260774462
