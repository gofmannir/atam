.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1515177432, 1232547255
__Garbage_922265620: .byte 201, 160, 76, 169, 94, 113, 4, 132, 174
__ExpectedArraySize: .int 2
__Garbage_21586437: .byte 5, 96
__Nodes:
.quad 0
.int -1515177432
.quad 0
__Garbage_827329536: .byte 11, 43, 31, 111, 125, 127, 55, 140, 102, 51
root:
.quad __Nodes + 0
__Garbage_214348662: .byte 176, 154, 41, 120, 35, 47, 41
node:
.quad 551959525
.int 1232547255
.quad -590079282
