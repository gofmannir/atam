.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -861160397, -698886341, 15777618, 942292916
__Garbage_234672313: .byte 244, 251
__ExpectedArraySize: .int 4
__Garbage_16355207: .byte 140, 130, 223, 211
__Nodes:
.quad __Nodes + 60
.int 942292916
.quad 0
.quad 0
.int -861160397
.quad 0
.quad 0
.int 15777618
.quad 0
.quad __Nodes + 20
.int -698886341
.quad __Nodes + 40
__Garbage_435048: .byte 200, 129, 249, 142, 197, 149, 28
root:
.quad __Nodes + 0
__Garbage_395455182: .byte 137, 90, 11, 129, 200
node:
.quad -1025254208
.int -861160397
.quad -1042746155
