.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -872636167, -474893231, -462150435
__Garbage_209595773: .byte 142, 0
__ExpectedArraySize: .int 3
__Garbage_580196336: .byte 208, 31, 73, 115, 29, 78, 196, 230
__Nodes:
.quad 0
.int -474893231
.quad __Nodes + 20
.quad 0
.int -462150435
.quad 0
__Garbage_619746489: .byte 241, 31, 15, 160
root:
.quad __Nodes + 0
__Garbage_152819493: .byte 221, 85, 44, 10, 247, 228, 120
node:
.quad 187069961
.int -872636167
.quad -1415800476
