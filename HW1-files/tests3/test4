.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1400650737, 377798137, 942519899
__Garbage_482366514: .byte 115, 125, 20, 54, 41, 180, 205, 205, 61, 96
__ExpectedArraySize: .int 3
__Garbage_524957624: .byte 34
__Nodes:
.quad 0
.int 377798137
.quad 0
.quad 0
.int -1400650737
.quad __Nodes + 0
__Garbage_437504670: .byte 110, 134, 124, 155, 143, 50, 252, 34
root:
.quad __Nodes + 20
__Garbage_758321371: .byte 43, 243, 164, 188, 67, 141, 37
node:
.quad -1026869965
.int 942519899
.quad -538574083
